<!-- 
    1.在li元素中放入img图片时，li的高度总是会比img图片的高度多出几个像素
      解决方案：将img元素的css设置为vertical-align:middle;
    2.css设置li里面的文本水平垂直居中
      解决方案：height = line-height;
               text-align = center;
    3.轮播和缓冲效果实现：a.flag标签标志轮播移动方向，count计数器标志当前轮播页面；当flag为true则正向轮播，count++;当flag为false则反向轮播，count--
                        b.设置<div id="list"></div>包裹<ul id="images"></ul>,宽高一样
                          #list {position: relative;width: 490px;height: 170px;overflow: hidden;}
                          #images {position: absolute;left: 0;top: 0;}
                        c.js缓冲运动实现缓冲效果
 -->
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>自动轮播广告（缓冲效果）</title>
    <style>
        * {
            margin: 0;
            padding: 0;
        }
        
        body {
            background-color: black;
        }
        
        #box {
            width: 490px;
            height: 170px;
            margin: 15px auto;
            border: 10px solid white;
            border-radius: 5px;
            position: relative;
        }
        
        #list {
            position: relative;
            width: 490px;
            height: 170px;
            overflow: hidden;
        }
        
        #images {
            position: absolute;
            left: 0;
            top: 0;
        }
        
        img {
            width: 490px;
            height: 170px;
            vertical-align: middle;
            cursor: pointer;
        }
        
        #pages {
            position: absolute;
            width: 130px;
            display: flex;
            justify-content: space-around;
            right: 0;
            top: 147px;
            cursor: pointer;
        }
        
        #pages li {
            list-style: none;
            width: 18px;
            height: 18px;
            line-height: 18px;
            padding: 1px;
            text-align: center;
            font-weight: bold;
            font-size: 12px;
            color: white;
            background-color: orangered;
            border-radius: 50%;
        }
        
        .non-active {
            opacity: 0.5;
        }
        
        .active {
            opacity: 1;
        }
    </style>
</head>

<body>
    <div id="box">
        <div id="list">
            <ul id="images">
                <li><img src="http://www.fgm.cc/learn/lesson7/img/01.jpg" /></li>
                <li><img src="http://www.fgm.cc/learn/lesson7/img/02.jpg" /></li>
                <li><img src="http://www.fgm.cc/learn/lesson7/img/03.jpg" /></li>
                <li><img src="http://www.fgm.cc/learn/lesson7/img/04.jpg" /></li>
                <li><img src="http://www.fgm.cc/learn/lesson7/img/05.jpg" /></li>
            </ul>
            <ul id="pages">
                <li>1</li>
                <li>2</li>
                <li>3</li>
                <li>4</li>
                <li>5</li>
            </ul>
        </div>
    </div>
</body>
<script>
    window.onload = function() {
        const imagesUl = document.getElementById("images");
        const images = imagesUl.getElementsByTagName("li");
        const pages = document.getElementById("pages").getElementsByTagName("li");
        var timer = bufferTimer = null;
        var flag = true; //标志轮播滚动方向，初始向下滚动
        var count = 0; //记录页面数
        var iHeight;


        //初始设置
        function cutOver() {
            for (let i = 0; i < pages.length; i++) {
                pages[i].className = "non-active";
            }
            pages[count].className = "active";
            startMove(-(count * images[0].offsetHeight));
        }

        cutOver();

        function startMove(iTarget) {
            clearInterval(bufferTimer);
            bufferTimer = setInterval(function() {
                doMove(iTarget);
            }, 30);
        }

        function doMove(iTarget) {
            var iSpeed = (iTarget - imagesUl.offsetTop) / 10;
            iSpeed = iSpeed > 0 ? Math.ceil(iSpeed) : Math.floor(iSpeed);
            images.offsetTop == iTarget ? clearInterval(bufferTimer) : imagesUl.style.top = imagesUl.offsetTop + iSpeed + "px";
        }
        //缓冲效果实现
        function buffer() {
            cutOver();
        }

        //自动轮播（缓冲效果）
        timer = setInterval(next, 3000);

        function next() {
            flag ? count++ : count--; //如果flag为true则正向轮播从1-5，否则反向
            if (count == pages.length - 1) {
                flag = false;
                count = pages.length - 1;
            }
            if (count == 0) {
                flag = true;
                count = 0;
            }
            buffer();
        }

        //鼠标移入停止轮播
        imagesUl.onmouseover = function() {
            clearInterval(timer);
        };

        //鼠标移出继续轮播
        imagesUl.onmouseout = function() {
            timer = setInterval(next, 3000);
        };

        //鼠标移动到页数上面切换
        for (let i = 0; i < pages.length; i++) {
            pages[i].onmouseover = function() {
                count = i;
                cutOver();
            }
        }
    };
</script>

</html>
